# src/rf_feature_engineering.py
# Author: Raha Musavi
# Matrikelnummer: 08022255354
# Thesis: Modeling the Presence and the Classification of Ezafe in Middle Persian Nominal Phrases
# Date: 01 May 2025

"""
This script prepares the dataset for the Random Forest classification model
by loading the initial nominal phrase features and creating the combined
target label.

It reads the initial feature set CSV file generated by the preprocessing script,
combines the binary 'ezafe_label' and the positional 'position' features into
a single 'combined_label' column, and saves the updated dataset to a new CSV file.

Input file: data/rf_np_inputs.csv
Output file: data/rf_features.csv
"""

import pandas as pd
import os

# --- Main execution for rf_prepare_features.py ---
if __name__ == "__main__":
    """
    Main execution block for the feature preparation script.

    Sets up necessary directories, loads the raw feature data,
    creates the combined target column, and saves the prepared dataset.
    """
    # Get the directory where the script is located
    script_dir = os.path.dirname(__file__)
    # Construct the path to the data directory relative to the script's location
    data_dir = os.path.join(script_dir, '..', 'data')

    # Create the data directory if it does not exist
    os.makedirs(data_dir, exist_ok=True)

    print("--- Step 2: RF Feature Preparation (rf_prepare_features.py) ---")

    # Define input and output file paths within the data directory
    # The input file name from rf_preprocess_data.py is 'rf_np_inputs.csv'
    input_file = os.path.join(data_dir, "rf_np_inputs.csv")
    # The output file name for rf_train_evaluate.py is 'rf_features.csv'
    output_features_file = os.path.join(data_dir, "rf_features.csv")

    # Check if the input file exists before attempting to load
    if not os.path.exists(input_file):
        print(f"Error: Input file '{input_file}' not found. Ensure rf_preprocess_data.py was run successfully.")
        exit() # Terminate script execution if input file is missing

    # Load the data from the initial preprocessing step into a pandas DataFrame.
    df = pd.read_csv(input_file)

    # Create the combined target label as described in Section 6.4 of the thesis.
    # This column will be used by the Random Forest model for multi-class classification.
    # Check if the column already exists to prevent unnecessary recreation.
    if 'combined_label' not in df.columns:
        # Concatenate the string representations of 'ezafe_label' and 'position'
        df['combined_label'] = df['ezafe_label'].astype(str) + "_" + df['position'].astype(str)
        print("Created 'combined_label' column by combining 'ezafe_label' and 'position'.")

    # Save the DataFrame, now including all original features and the new 'combined_label' column.
    # This file is the final input dataset for the training and evaluation script.
    df.to_csv(output_features_file, index=False)
    print(f"Prepared RF features (including combined target) saved to {output_features_file}")

    print("\n--- RF Feature Preparation Complete ---")